<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	 xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context   
 	http://www.springframework.org/schema/context/spring-context-3.1.xsd
 	http://www.springframework.org/schema/mvc
 	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
 	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd 
	">



	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basenames">  
            <list>  
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->  
                <value>classpath:messages</value>  
            </list>  
        </property>  
        <property name="defaultEncoding" value="UTF-8"/>  
        <property name="cacheSeconds" value="60"/>  
    </bean>  
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>  
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->  
        <property name="validationMessageSource" ref="messageSource"/>  
    </bean>
          
   	<!-- 默认的注解映射的支持 -->  
   	<mvc:annotation-driven  validator="validator"/>
   	 <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
	 
	
   	<!-- 对静态资源文件的访问  方案一 （二选一）web.xml要配置 -->  
   	<mvc:default-servlet-handler/>    
   	
   	    	<!--  对静态资源文件的访问  方案二 （二选一） -->  
		<mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>  
		<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>  
		<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
		 
		
		<!-- jsp视图  启用jstl-->
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
					p:viewClass="org.springframework.web.servlet.view.JstlView"
					p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>
		<!-- json xml配置 -->  
		<bean id="json" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" p:renderedAttributes="user" ></bean>

		<!-- 支持JSON 需要加入 jackson-all-1.9.5.jar -->  
		    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />  
		    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
		        <property name="messageConverters">  
		            <util:list id="beanList">  
		                <ref bean="mappingJacksonHttpMessageConverter"/>  
		            </util:list>  
		        </property>  
		    </bean>  
		    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
		          <property name="supportedMediaTypes" value="application/json" />
		    </bean> 
		    
    	<context:component-scan base-package="controllers" ></context:component-scan>  
   
	    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器-->
		<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="defaultEncoding" value="UTF-8"/>
			<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
			<property name="maxUploadSize" value="200000"/>
		</bean>
		
		<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
		<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中x -->
		<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
			<property name="exceptionMappings">
				<props>
					<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面-->
					<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
				</props>
			</property>
		</bean> 
</beans>